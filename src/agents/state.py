from typing import TypedDict, Optional, List
from langchain_core.messages import BaseMessage

class AgentState(TypedDict):
    """
    Represents the shared state of the Hera Pheri agent crew.
    This TypedDict is passed between all nodes in the graph.
    """
    
    # The initial task given by the user.
    task: str
    
    # The step-by-step plan created by Shyam.
    plan: Optional[List[str]]
    
    # The code or command generated by Raju for the current task.
    code: Optional[str]
    
    # Feedback from Shyam's review of Raju's code.
    review_feedback: Optional[str]
    
    # The index of the current task in the plan list.
    current_task_index: int
    
    # A list to store the history of messages, including tool calls and results.
    # This is the standard way LangGraph handles tool execution state.
    messages: List[BaseMessage]